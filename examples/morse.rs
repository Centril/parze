use parze::prelude::*;

fn main() {
    // Define a parser for morse code
    let morse: Parser<_, _> = rule!{
        (
            ( [b"-..."] -> 'B'
            | [b"-.-."] -> 'C'
            | [b"..-."] -> 'F'
            | [b"...."] -> 'H'
            | [b".---"] -> 'J'
            | [b".-.."] -> 'L'
            | [b".--."] -> 'P'
            | [b"--.-"] -> 'Q'
            | [b"...-"] -> 'V'
            | [b"-..-"] -> 'X'
            | [b"-.--"] -> 'Y'
            | [b"--.."] -> 'Z'
            | [b"-.."]  -> 'D'
            | [b"--."]  -> 'G'
            | [b"-.-"]  -> 'K'
            | [b"---"]  -> 'O'
            | [b".-."]  -> 'R'
            | [b"..."]  -> 'S'
            | [b"..-"]  -> 'U'
            | [b".--"]  -> 'W'
            | [b".-"]   -> 'A'
            | [b".."]   -> 'I'
            | [b"--"]   -> 'M'
            | [b"-."]   -> 'N'
            | [b"."]    -> 'E'
            | [b"-"]    -> 'T'
            ).padded_by(b' ')
        ) * => |cs| { cs.into_iter().collect::<String>() }
    };

    println!("{}", morse.parse(<&[_]>::from(b".... . .-.. .-.. --- .-- . .-.. -.-. --- -- . - --- .--. .- .-. --.. .")).unwrap());
}
